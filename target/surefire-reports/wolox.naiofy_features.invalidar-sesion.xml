<testsuite failures="0" name="wolox/naiofy_features/invalidar-sesion.feature" skipped="0" tests="2" time="1.843265">
  <testcase classname="wolox.naiofy_features.invalidar-sesion" name="login de usuario" time="0.97961">
    <system-out>* url pageUrl ............................................................. passed
* def typeUser = 'adminUser' == 'adminUser' ? adminUser : regularUser ..... passed
And def dataLogin = call read('login.feature@LoginUser') {email: '#(typeUser)'} . passed
* def userId = dataLogin.response ......................................... passed
Given path 'users','sessions','invalidate_all' ............................ passed
And request {} ............................................................ passed
And header Authorization = dataLogin.responseHeaders.Authorization[0] ..... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed</system-out>
  </testcase>
  <testcase classname="wolox.naiofy_features.invalidar-sesion" name="login de usuario" time="0.863655">
    <system-out>* url pageUrl ............................................................. passed
* def typeUser = 'adminUser' == 'adminUser' ? adminUser : regularUser ..... passed
And def dataLogin = call read('login.feature@LoginUser') {email: '#(typeUser)'} . passed
* def userId = dataLogin.response ......................................... passed
Given path 'users','sessions','invalidate_all' ............................ passed
And request {} ............................................................ passed
And header Authorization = dataLogin.responseHeaders.Authorization[0] ..... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
* url pageUrl ............................................................. passed
* def typeUser = 'regularUser' == 'adminUser' ? adminUser : regularUser ... passed
And def dataLogin = call read('login.feature@LoginUser') {email: '#(typeUser)'} . passed
* def userId = dataLogin.response ......................................... passed
Given path 'users','sessions','invalidate_all' ............................ passed
And request {} ............................................................ passed
And header Authorization = dataLogin.responseHeaders.Authorization[0] ..... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed</system-out>
  </testcase>
</testsuite>
